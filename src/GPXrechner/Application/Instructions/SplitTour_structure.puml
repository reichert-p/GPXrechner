@startuml

/' diagram meta data start
config=StructureConfiguration;
{
  "projectClassification": {
    "searchMode": "OpenProject", // OpenProject, AllProjects
    "includedProjects": "",
    "pathEndKeywords": "*.impl",
    "isClientPath": "",
    "isClientName": "",
    "isTestPath": "",
    "isTestName": "",
    "isMappingPath": "",
    "isMappingName": "",
    "isDataAccessPath": "",
    "isDataAccessName": "",
    "isDataStructurePath": "",
    "isDataStructureName": "",
    "isInterfaceStructuresPath": "",
    "isInterfaceStructuresName": "",
    "isEntryPointPath": "",
    "isEntryPointName": "",
    "treatFinalFieldsAsMandatory": false
  },
  "graphRestriction": {
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "removeByInheritance": "", // inheritance/annotation based filtering is done in a second step
    "removeByAnnotation": "",
    "removeByClassPackage": "", // cleanup the graph after inheritance/annotation based filtering is done
    "removeByClassName": "",
    "cutMappings": false,
    "cutEnum": true,
    "cutTests": true,
    "cutClient": true,
    "cutDataAccess": true,
    "cutInterfaceStructures": true,
    "cutDataStructures": true,
    "cutGetterAndSetter": true,
    "cutConstructors": true
  },
  "graphTraversal": {
    "forwardDepth": 2,
    "backwardDepth": 1,
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "hideMappings": false,
    "hideDataStructures": false,
    "hidePrivateMethods": true,
    "hideInterfaceCalls": true, // indirection: implementation -> interface (is hidden) -> implementation
    "onlyShowApplicationEntryPoints": false, // root node is included
    "useMethodCallsForStructureDiagram": "ForwardOnly" // ForwardOnly, BothDirections, No
  },
  "details": {
    "aggregation": "GroupByClass", // ByClass, GroupByClass, None
    "showClassGenericTypes": true,
    "showMethods": true,
    "showMethodParameterNames": true,
    "showMethodParameterTypes": true,
    "showMethodReturnType": true,
    "showPackageLevels": 2,
    "showDetailedClassStructure": true
  },
  "rootClass": "GPXrechner.Application.Instructions.SplitTour",
  "extensionCallbackMethod": "" // qualified.class.name#methodName - signature: public static String method(String)
}
diagram meta data end '/



digraph g {
    rankdir="TB"
    splines=polyline
    

'nodes 
subgraph cluster_1072845520 { 
   	label=Application
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   subgraph cluster_1114602656 { 
   	label=States
	labeljust=l
	fillcolor="#d8d8d8"
	style=filled
   
   Initial534505338[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Initial</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TourLoaded534505338[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TourLoaded</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   tour: Tour [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TrackLoaded534505338[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TrackLoaded</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   track: Track [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 

subgraph cluster_899390013 { 
   	label=Instructions
	labeljust=l
	fillcolor="#d8d8d8"
	style=filled
   
   Exit1197983005[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Exit</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(state: State): State</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GenerateTrack1197983005[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GenerateTrack</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   userOutput: UserOutput [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(state: State): State</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GetAltitudeDifference1197983005[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GetAltitudeDifference</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   userOutput: UserOutput [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(state: State): State</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GetDistance1197983005[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GetDistance</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   userOutput: UserOutput [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(state: State): State</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GetElevationProfile1197983005[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GetElevationProfile</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   userInput: UserInput [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   userOutput: UserOutput [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(state: State): State</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GetPMS1197983005[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GetPMS</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   userOutput: UserOutput [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(state: State): State</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GetSpeedProfile1197983005[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GetSpeedProfile</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   userInput: UserInput [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   userOutput: UserOutput [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(state: State): State</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GetTimeTaken1197983005[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GetTimeTaken</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   userOutput: UserOutput [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(state: State): State</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PMSFromFiles1197983005[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PMSFromFiles</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   userInput: UserInput [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   userOutput: UserOutput [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(state: State): State</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PredictTime1197983005[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PredictTime</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   userInput: UserInput [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   userOutput: UserOutput [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(state: State): State</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ReadPath1197983005[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ReadPath</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   userInput: UserInput [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   userOutput: UserOutput [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(state: State): State</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SplitTour1197983005[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SplitTour</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   userInput: UserInput [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   userOutput: UserOutput [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(state: State): State</TD></TR>
<TR><TD ALIGN="LEFT" >- generateEvaluationFunctions(movementSpeed: MovementSpeed, maxDuration: Duration): EvaluationFunction[]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 
} 

subgraph cluster_1901307053 { 
   	label=Plugin
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   Console1374765779[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Console</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   consoleInformation: UserOutput [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   consoleParsing: UserInput [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   instructions: Instruction[] [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   state: State [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- generateInstructions()</TD></TR>
<TR><TD ALIGN="LEFT" >- handler()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

subgraph cluster_1617069028 { 
   	label=Output
	labeljust=l
	fillcolor="#d8d8d8"
	style=filled
   
   ConsoleInformation1782828798[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ConsoleInformation</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ alertGranularityTooHigh(granularity: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ alertWrongFileType(filePath: String, expected: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ info(s: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ infoEstimatedTime(pathName: String, estimatedTime: Duration)</TD></TR>
<TR><TD ALIGN="LEFT" >+ infoGeneratedTrack(trackName: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ infoPMS(pms: MovementSpeed)</TD></TR>
<TR><TD ALIGN="LEFT" >+ infoPMSofTour(tourName: String, pms: MovementSpeed)</TD></TR>
<TR><TD ALIGN="LEFT" >+ infoPathElevationGain(pathname: String, elevationGain: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ infoPathLength(pathName: String, length: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ infoTimeTaken(tourName: String, timeTaken: Duration)</TD></TR>
<TR><TD ALIGN="LEFT" >+ infoWayPointsToSplit(splitPoints: WayPointSet)</TD></TR>
<TR><TD ALIGN="LEFT" >+ printBoolMatrix(matrix: boolean[][])</TD></TR>
<TR><TD ALIGN="LEFT" >+ provideEvaluationFunctions(evaluationFunctions: EvaluationFunction[])</TD></TR>
<TR><TD ALIGN="LEFT" >+ provideInstructions(instructions: Instruction[])</TD></TR>
<TR><TD ALIGN="LEFT" >+ provideSports()</TD></TR>
<TR><TD ALIGN="LEFT" >+ showElevationProfile(tourName: String, elevationProfile: ElevationProfile)</TD></TR>
<TR><TD ALIGN="LEFT" >+ showSpeedProfile(tourName: String, speedProfile: SpeedProfile)</TD></TR>
<TR><TD ALIGN="LEFT" >+ userToGiveClassPath(basePath: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ userToGiveClassPath(basePath: String, abortOption: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ userToProvideGranularity()</TD></TR>
<TR><TD ALIGN="LEFT" >+ userToProvideInstruction()</TD></TR>
<TR><TD ALIGN="LEFT" >+ userToProvideMovementSpeed()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 

subgraph cluster_1723619061 { 
   	label=Parsing
	labeljust=l
	fillcolor="#d8d8d8"
	style=filled
   
   ConsoleParsing880033487[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ConsoleParsing</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   userOutput: UserOutput [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getInstruction(instructions: Instruction[]): Instruction</TD></TR>
<TR><TD ALIGN="LEFT" >+ parseEvaluationFunction(evaluationFunctions: EvaluationFunction[]): EvaluationFunction</TD></TR>
<TR><TD ALIGN="LEFT" >+ parseMaxDuration(): Duration</TD></TR>
<TR><TD ALIGN="LEFT" >+ parseMovementSpeed(): MovementSpeed</TD></TR>
<TR><TD ALIGN="LEFT" >+ pathsToMovementSpeeds(): MovementSpeed</TD></TR>
<TR><TD ALIGN="LEFT" >+ readPath(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ readPaths(): String[]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 
} 

subgraph cluster_2052636900 { 
   	label=Domain
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   subgraph cluster_518132580 { 
   	label=WayModel
	labeljust=l
	fillcolor="#d8d8d8"
	style=filled
   
   Tour2143218799[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Tour</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   description: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   tourPoints: ArrayList&lt;Location&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addTourPoint(t: TourPoint)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addTourPoints(t: TourPoint[])</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Track2143218799[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Track</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   description: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   trackPoints: ArrayList&lt;Location&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addTrackPoint(t: TrackPoint)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addTrackPoints(t: TrackPoint[])</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 
} 

'edges    
Console1374765779 -> SplitTour1197983005[label="instructions
[0..*]", arrowhead=none];
SplitTour1197983005 -> ConsoleInformation1782828798[arrowhead=none];
SplitTour1197983005 -> ConsoleParsing880033487[arrowhead=none];
SplitTour1197983005 -> Exit1197983005[arrowhead=none];
SplitTour1197983005 -> GenerateTrack1197983005[arrowhead=none];
SplitTour1197983005 -> GetAltitudeDifference1197983005[arrowhead=none];
SplitTour1197983005 -> GetDistance1197983005[arrowhead=none];
SplitTour1197983005 -> GetElevationProfile1197983005[arrowhead=none];
SplitTour1197983005 -> GetPMS1197983005[arrowhead=none];
SplitTour1197983005 -> GetSpeedProfile1197983005[arrowhead=none];
SplitTour1197983005 -> GetTimeTaken1197983005[arrowhead=none];
SplitTour1197983005 -> Initial534505338[arrowhead=none];
SplitTour1197983005 -> PMSFromFiles1197983005[arrowhead=none];
SplitTour1197983005 -> PredictTime1197983005[arrowhead=none];
SplitTour1197983005 -> ReadPath1197983005[arrowhead=none];
SplitTour1197983005 -> TourLoaded534505338[arrowhead=none];
SplitTour1197983005 -> TrackLoaded534505338[arrowhead=none];
TourLoaded534505338 -> Tour2143218799[label="tour
[0..1]"];
TrackLoaded534505338 -> Track2143218799[label="track
[0..1]"];
    
}
@enduml